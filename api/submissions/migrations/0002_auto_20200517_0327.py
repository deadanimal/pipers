# Generated by Django 2.2.12 on 2020-05-17 03:27

import api.helpers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('notifications', '0006_auto_20200516_1609'),
        ('submissions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubmissionDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('document_file', models.FileField(null=True, upload_to=api.helpers.PathAndRename('piper/documents'))),
                ('document_type', models.CharField(choices=[('PD', 'Provided'), ('RV', 'Revised Document'), ('NA', 'Not Available')], default='NA', max_length=2)),
            ],
        ),
        migrations.AddField(
            model_name='submission',
            name='notification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.Notification'),
        ),
        migrations.AddField(
            model_name='submission',
            name='status',
            field=models.CharField(choices=[('CR', 'Created'), ('FL', 'Failed To Submit'), ('IP', 'In Progress'), ('RJ', 'Rejected'), ('SM', 'Submitted')], default='CR', max_length=2),
        ),
        migrations.CreateModel(
            name='SubmissionTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('task_type', models.CharField(choices=[('CP', 'Company Details'), ('FL', 'Failed To Submit'), ('PP', 'Proposal'), ('PT', 'Prototype'), ('VD', 'Video'), ('WF', 'Wireframe'), ('NA', 'Not Availabl')], default='NA', max_length=2)),
                ('checker_by_date', models.DateTimeField(blank=True, null=True)),
                ('maker_by_date', models.DateTimeField(blank=True, null=True)),
                ('checker_real_date', models.DateTimeField(blank=True, null=True)),
                ('maker_real_date', models.DateTimeField(blank=True, null=True)),
                ('checker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_checker', to=settings.AUTH_USER_MODEL)),
                ('maker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_maker', to=settings.AUTH_USER_MODEL)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.Notification')),
            ],
        ),
    ]
